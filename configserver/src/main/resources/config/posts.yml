server:
  port: 3100

spring:
  # Basic app configuration
  application:
    version: 1.0.0
  # Profile config
  config:
    import:
      - "posts-dev.yml"
      - "posts-testing.yml"
      - "posts-prod.yml"

  cloud:
    # Functional api & stream config
    function:
      definition: handleDeliveredNotification
    stream:
      bindings:
        # Consumer configuration for 'notification-delivered' exchange
        handleDeliveredNotification-in-0:
          destination: notification-delivered
          group: ${spring.application.name}

        # Publisher configuration for 'send-notification' exchange
        notificationSender-out-0:
          destination: send-notification

  # Default datasource configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/post-service-pg-db
    username: post-service-pg-db_user
    password: post-service-pg-db_password

    # Connection pool configuration
    hikari:
      connection-timeout: 600000 # 10 minutes
      maximum-pool-size: 3       # Connection limit
      auto-commit: false         # Let us handle transactions
      idle-timeout: 1800000      # 30 minutes
      minimum-idle: 2            # Minimum number of idle connections in the pool

  # JPA configuration
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    show-sql: true

# Service registry config
eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:7777/eureka/

# Application info (will be shown in eureka too)
info:
  app:
    name: "posts"
    description: "Posts service for micro-forum app"
    version: "1.0.0"


# Swagger custom configuration: Show swagger Ui in root path
springdoc:
  swagger-ui:
    path: /

# Actuator configuration
management:
  endpoints:
    web:
      exposure:
        include: '*'
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  info:
    env:
      enabled: true
  # For tracing
  tracing:
    sampling:
      probability: 1.0f
  # Enable shutdown endpoint
  endpoint:
    health:
      probes:
        enabled: true
    shutdown:
      enabled: true

# Expose shutdown endpoint
endpoints:
  shutdown:
    enabled: true
